/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src.interfaces_graficas;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import src.fachada.FachadaAdminSRP;
import src.patron_proxy.ProxyGestorBD;
import src.patron_strategy_empleados_productos.ContextoEmpleados;
import src.patron_strategy_empleados_productos.EstrategiaOrdenarPorIdentificador;
import src.patron_strategy_empleados_productos.EstrategiaOrdenarPorNombreEmpleados;
import src.users.Empleado;
import src.patron_strategy_empleados_productos.EstrategiaEmpleados;

/**
 *
 * @author Carlos
 */
public class BuscarEmpleado extends javax.swing.JFrame {

    /**
     * Creates new form BuscarEmpleado
     */
    
    //Proxy actua de singleton
    private ProxyGestorBD sbd = ProxyGestorBD.getInstancia();

    
    private FachadaAdminSRP fachada = new FachadaAdminSRP();

    private HomeAdmin ha;

    public BuscarEmpleado(HomeAdmin HA) {
        this.ha = HA;
        initComponents();
        setTitle("Busqueda de Empleado");
        setLocationRelativeTo(null);

    }

    //Obtenemos los valores de los jTextField
    public String getDNIBusqueda() {

        return jTextFieldDniIntroducido.getText();
    }

    public String getNombreBusqueda() {

        return jTextFieldNombreIntroducido.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonModificacionDatosEmpleado = new javax.swing.JButton();
        jButtonEliminarElementoSeleccionado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonVolverAtrasBuscarEmpleado = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMuestraEmpleados = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jButtonBusquedaDNI = new javax.swing.JButton();
        jTextFieldDniIntroducido = new javax.swing.JTextField();
        jButtonBusquedaNombre = new javax.swing.JButton();
        jTextFieldNombreIntroducido = new javax.swing.JTextField();
        jButtonOrdenarDni = new javax.swing.JButton();
        jButtonOrdenarNombre = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonModificacionDatosEmpleado.setBackground(new java.awt.Color(255, 153, 0));
        jButtonModificacionDatosEmpleado.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButtonModificacionDatosEmpleado.setText("Modificar");
        jButtonModificacionDatosEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificacionDatosEmpleadoActionPerformed(evt);
            }
        });

        jButtonEliminarElementoSeleccionado.setBackground(new java.awt.Color(255, 0, 0));
        jButtonEliminarElementoSeleccionado.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        jButtonEliminarElementoSeleccionado.setText("Eliminar");
        jButtonEliminarElementoSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarElementoSeleccionadoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("DNI");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("Nombre");

        jButtonVolverAtrasBuscarEmpleado.setBackground(new java.awt.Color(255, 102, 102));
        jButtonVolverAtrasBuscarEmpleado.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jButtonVolverAtrasBuscarEmpleado.setText("Atrás");
        jButtonVolverAtrasBuscarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverAtrasBuscarEmpleadoActionPerformed(evt);
            }
        });

        jTableMuestraEmpleados.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTableMuestraEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dni", "Nombre", "Apellidos", "Correo", "Password", "Horario", "Telefono", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMuestraEmpleados.setColumnSelectionAllowed(true);
        jTableMuestraEmpleados.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableMuestraEmpleados);
        jTableMuestraEmpleados.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel24.setFont(new java.awt.Font("Verdana", 1, 22)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 51, 255));
        jLabel24.setText("Búsqueda de empleado");

        jButtonBusquedaDNI.setBackground(new java.awt.Color(0, 102, 255));
        jButtonBusquedaDNI.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButtonBusquedaDNI.setText("Buscar ");
        jButtonBusquedaDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBusquedaDNIActionPerformed(evt);
            }
        });

        jTextFieldDniIntroducido.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jButtonBusquedaNombre.setBackground(new java.awt.Color(0, 102, 255));
        jButtonBusquedaNombre.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButtonBusquedaNombre.setText("Buscar ");
        jButtonBusquedaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBusquedaNombreActionPerformed(evt);
            }
        });

        jTextFieldNombreIntroducido.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jButtonOrdenarDni.setBackground(new java.awt.Color(102, 102, 255));
        jButtonOrdenarDni.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonOrdenarDni.setText("Busqueda global orden DNI");
        jButtonOrdenarDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarDniActionPerformed(evt);
            }
        });

        jButtonOrdenarNombre.setBackground(new java.awt.Color(102, 102, 255));
        jButtonOrdenarNombre.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonOrdenarNombre.setText("Busqueda global orden Nombre");
        jButtonOrdenarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextFieldDniIntroducido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jButtonBusquedaDNI))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jTextFieldNombreIntroducido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jButtonBusquedaNombre)
                            .addGap(82, 82, 82)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(97, 97, 97))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonVolverAtrasBuscarEmpleado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonOrdenarNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .addComponent(jButtonOrdenarDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jButtonModificacionDatosEmpleado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(jButtonEliminarElementoSeleccionado)
                .addGap(195, 195, 195))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNombreIntroducido, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDniIntroducido, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBusquedaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBusquedaDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOrdenarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonOrdenarDni, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModificacionDatosEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminarElementoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jButtonVolverAtrasBuscarEmpleado))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(351, 351, 351))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBusquedaDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBusquedaDNIActionPerformed

        //Uso de proxy para obtener los empleados dado un dni
        ArrayList<Empleado> list = sbd.consultagetEmpleadosDNI(getDNIBusqueda());
        DefaultTableModel tablaMuestra = (DefaultTableModel) jTableMuestraEmpleados.getModel();
        tablaMuestra.setRowCount(0); // Se sobreescriben los resultados cada vez que se pulsa el boton

        jTableMuestraEmpleados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); //hacemos que se seleccione una unica casilla

        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) { //Recorremos el array de empleados y obtenemos sus atributos para meterlos en la tabla
            row[0] = list.get(i).getDni();
            row[1] = list.get(i).getNombre();
            row[2] = list.get(i).getApellidos();
            row[3] = list.get(i).getCorreo();
            row[4] = list.get(i).getPassword();
            row[5] = list.get(i).getHorario();
            row[6] = list.get(i).getTelefono();
            row[7] = list.get(i).getCategoria();

            tablaMuestra.addRow(row);
        }


    }//GEN-LAST:event_jButtonBusquedaDNIActionPerformed

    private void jButtonModificacionDatosEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificacionDatosEmpleadoActionPerformed

        DefaultTableModel tablaMuestra = (DefaultTableModel) jTableMuestraEmpleados.getModel();
        int indiceFilaSeleccionada = jTableMuestraEmpleados.getSelectedRow();

        ModificacionDatosEmpleado mde = new ModificacionDatosEmpleado(this);

        if (indiceFilaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona una fila", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            String nuevoDniModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 0).toString();
            String nuevoNombreModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 1).toString();
            String nuevoApellidosModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 2).toString();
            String nuevoCorreoModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 3).toString();
            String nuevoPasswordModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 4).toString();
            String nuevoHorarioModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 5).toString();
            String nuevoTelefonoModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 6).toString();
            String nuevaCategoriaModificar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 7).toString();

            // Establecemos los valores de la fila seleccionada en cada uno de los inputs de la nueva pantalla de modificación
            if (indiceFilaSeleccionada != -1) {
                mde.jTextFieldDniAModificar.setText(nuevoDniModificar);
                mde.jTextFieldNombreAModificar.setText(nuevoNombreModificar);
                mde.jTextFieldApellidosAModificar.setText(nuevoApellidosModificar);
                mde.jTextFieldCorreoAModificar.setText(nuevoCorreoModificar);
                mde.jTextFieldContraseñaAModificar.setText(nuevoPasswordModificar);
                mde.jComboBoxHorario.setSelectedItem(nuevoHorarioModificar);
                mde.jTextFieldTelefonoAModificar.setText(nuevoTelefonoModificar);
                mde.jComboBoxCategoria.setSelectedItem(nuevaCategoriaModificar);

                mde.setVisible(true);
                this.setVisible(false);
                mde.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonModificacionDatosEmpleadoActionPerformed

    private void jButtonBusquedaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBusquedaNombreActionPerformed

        //Uso de proxy para obtener los empleados dado un nombre
        ArrayList<Empleado> list = sbd.consultagetEmpleadosNombre(getNombreBusqueda());
        DefaultTableModel tablaMuestra = (DefaultTableModel) jTableMuestraEmpleados.getModel();
        tablaMuestra.setRowCount(0);
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getDni();
            row[1] = list.get(i).getNombre();
            row[2] = list.get(i).getApellidos();
            row[3] = list.get(i).getCorreo();
            row[4] = list.get(i).getPassword();
            row[5] = list.get(i).getHorario();
            row[6] = list.get(i).getTelefono();
            row[7] = list.get(i).getCategoria();
            tablaMuestra.addRow(row);
        }

    }//GEN-LAST:event_jButtonBusquedaNombreActionPerformed

    private void jButtonEliminarElementoSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarElementoSeleccionadoActionPerformed

                //Uso de proxy para obtener los empleados dado un nombre

        ArrayList<Empleado> list = sbd.consultagetEmpleadosNombre(getNombreBusqueda());
        DefaultTableModel tablaMuestra = (DefaultTableModel) jTableMuestraEmpleados.getModel();
        int indiceFilaSeleccionada = jTableMuestraEmpleados.getSelectedRow();

        if (indiceFilaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona una fila", "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            String dniEliminar = tablaMuestra.getValueAt(indiceFilaSeleccionada, 0).toString();
            String nombreEliminado = tablaMuestra.getValueAt(indiceFilaSeleccionada, 1).toString();

            fachada.eliminarEmpleado(dniEliminar);

            tablaMuestra.removeRow(indiceFilaSeleccionada);

            JOptionPane.showMessageDialog(null, "Eliminado el empleado " + nombreEliminado + " cuyo DNI es " + dniEliminar, "Eliminacion", JOptionPane.INFORMATION_MESSAGE);

        }


    }//GEN-LAST:event_jButtonEliminarElementoSeleccionadoActionPerformed

    private void jButtonVolverAtrasBuscarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverAtrasBuscarEmpleadoActionPerformed
        this.setVisible(false);
        this.ha.setVisible(true);
    }//GEN-LAST:event_jButtonVolverAtrasBuscarEmpleadoActionPerformed

    private void jButtonOrdenarDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarDniActionPerformed
                //Uso de proxy para obtener todos los empleados 

        ArrayList<Empleado> aux = sbd.getEmpleados();
        DefaultTableModel tablaMuestra = (DefaultTableModel) jTableMuestraEmpleados.getModel();
        tablaMuestra.setRowCount(0);

        //Aplicamos Strategy para ordenar los empleados por DNI con la estrategia concreta
        EstrategiaEmpleados est = new EstrategiaOrdenarPorIdentificador();
        ContextoEmpleados contexto = new ContextoEmpleados(est, aux);
        contexto.ejecutaEstrategiaEmpleados();
        Object[] row = new Object[8];
        for (int i = 0; i < aux.size(); i++) {
            row[0] = aux.get(i).getDni();
            row[1] = aux.get(i).getNombre();
            row[2] = aux.get(i).getApellidos();
            row[3] = aux.get(i).getCorreo();
            row[4] = aux.get(i).getPassword();
            row[5] = aux.get(i).getHorario();
            row[6] = aux.get(i).getTelefono();
            row[7] = aux.get(i).getCategoria();

            tablaMuestra.addRow(row);
        }

    }//GEN-LAST:event_jButtonOrdenarDniActionPerformed

    private void jButtonOrdenarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarNombreActionPerformed
        ArrayList<Empleado> aux = sbd.getEmpleados();
        DefaultTableModel tablaMuestra = (DefaultTableModel) jTableMuestraEmpleados.getModel();
        tablaMuestra.setRowCount(0);

                //Aplicamos Strategy para ordenar los empleados por nombre con la estrategia concreta

        EstrategiaEmpleados est = new EstrategiaOrdenarPorNombreEmpleados();
        ContextoEmpleados contexto = new ContextoEmpleados(est, aux);
        contexto.ejecutaEstrategiaEmpleados();

        Object[] row = new Object[8];
        for (int i = 0; i < aux.size(); i++) {
            row[0] = aux.get(i).getDni();
            row[1] = aux.get(i).getNombre();
            row[2] = aux.get(i).getApellidos();
            row[3] = aux.get(i).getCorreo();
            row[4] = aux.get(i).getPassword();
            row[5] = aux.get(i).getHorario();
            row[6] = aux.get(i).getTelefono();
            row[7] = aux.get(i).getCategoria();

            tablaMuestra.addRow(row);
        }

    }//GEN-LAST:event_jButtonOrdenarNombreActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBusquedaDNI;
    private javax.swing.JButton jButtonBusquedaNombre;
    private javax.swing.JButton jButtonEliminarElementoSeleccionado;
    private javax.swing.JButton jButtonModificacionDatosEmpleado;
    private javax.swing.JButton jButtonOrdenarDni;
    private javax.swing.JButton jButtonOrdenarNombre;
    private javax.swing.JButton jButtonVolverAtrasBuscarEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMuestraEmpleados;
    private javax.swing.JTextField jTextFieldDniIntroducido;
    private javax.swing.JTextField jTextFieldNombreIntroducido;
    // End of variables declaration//GEN-END:variables
}
